// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Or8Way.hdl
// Implements an 8-way OR gate by combining multiple 2-way OR gates
// It shows how the output out is 1 if any of the inputs in[0] to in[7] is 1, and 0 only if all inputs are 0.
/**
 * 8-way Or gate: 
 * out = in[0] Or in[1] Or ... Or in[7]
 *
 * Truth table:
 * | in[0] | in[1] | in[2] | in[3] | in[4] | in[5] | in[6] | in[7] | out |
 * |-------|-------|-------|-------|-------|-------|-------|-------|-----|
 * |   0   |   0   |   0   |   0   |   0   |   0   |   0   |   0   |  0  |
 * |   0   |   0   |   0   |   0   |   0   |   0   |   0   |   1   |  1  |
 * |   1   |   0   |   0   |   0   |   0   |   0   |   0   |   0   |  1  |
 * |  ...  |  ...  |  ...  |  ...  |  ...  |  ...  |  ...  |  ...  | ... |
 * |   1   |   1   |   1   |   1   |   1   |   1   |   1   |   1   |  1  |
 */
CHIP Or8Way {
    IN in[8];
    OUT out;

    PARTS:
    // Combine pairs of inputs using Or gates to reduce them step by step
    Or(a=in[0], b=in[1], out=or1);
    Or(a=in[2], b=in[3], out=or2);
    Or(a=in[4], b=in[5], out=or3);
    Or(a=in[6], b=in[7], out=or4);
    Or(a=or1, b=or2, out=or5);
    Or(a=or3, b=or4, out=or6);
    Or(a=or5, b=or6, out=out);
}
